install docker

yarn install-postgres-database

database postgres credentials
username: postgres
password: root


Envio de email
Para ambiente de desenvolvimento será utilizado o mailtrap
Quando a aplicacao for ao ar utilizar um dos servicos de email disponiveis Ex:

Amazon SES
Mailgu
Sparkpost
Mandril (Mailchimp)
Gmail (Náo recomendado pois pode ser bloqueado devido a limite de envio)

DEPLOY DIGITAL OCEAN
create droplet and keep steps
ssh key
ssh-keygen
cd ~/.ssh
cat id_rsa.pub
copy content and paste on Digital ocean platform

ssh root@159.65.235.81

senha da ssh gerada foi pde_cfe

apt update
apt upgrade

adduser deploy

Dar permissoes de administrador
usermod -aG sudo deploy

Permir o acesso ssh direto no usuario criado

cd /home/deploy/
mkdir .ssh
cd .ssh
cp ~/.ssh/authorized_keys .

chown deploy:deploy authorized_keys

exit

ssh deploy@159.65.235.81
pde_cfe

install node

git clone https://orlando_nascimento@bitbucket.org/orlando_nascimento/pde_cfe_node.git app

cd app/

npm install

cp .env.example .env

nano .env

Dar permissoes de sudo no docker
sudo groupadd docker
sudo usermod -aG docker $USER

exit;

ssh deploy@159.65.235.81

install services (postgres, mongo, redis) using commands for package.json

docker exec -it databasepdecfe bash

su postgres

psql

CREATE DATABASE pde_cfe

npm run build

npm run start

sudo ufw allow 3333

npx sequelize db:migrate

OBS: Caso a conexão com o servidor caia enquanto está rodando o node e vc queira
parar o processo

lsof -i :3333
kill -9 PID

Configuraçao pra não desconectar do servidor

sudo nano /etc/ssh/sshd_config

ClientAliveInterval 30
TCPKeepAlive yes
ClientAliveCountMax 99999

Save File

sudo service sshd restart

Configurar proxy reverso com subdomínio usando o servidor do Nginx

sudo apt install nginx

sudo ufw allow 80

sudo nano /etc/nginx/sites-available/default

O arquivo deve ficar assim

server {
        listen 80 default_server;
        listen [::]:80 default_server;

        server_name _;

        location / {
                proxy_pass http://localhost:3333;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection 'upgrade';
                proxy_set_header Host $host;
                proxy_cache_bypass $http_upgrade;
        }
}

Salve e saia do arquivo

sudo service nginx restart

sudo nginx -t

nginx: the configuration file /etc/nginx/nginx.conf syntax is ok
nginx: configuration file /etc/nginx/nginx.conf test is successful

npm start

Agora é só acessar direto pela porta 80 que o nginx vai redirecionar para a porta 3333 da aplicação

Manter a aplicação up independente de qualquer coisa

sudo npm install -g pm2

pm2 start dist/server.js

pm2 list

pm2 startup systemd

sudo env PATH=$PATH:/usr/bin /usr/lib/node_modules/pm2/bin/pm2 startup systemd -u deploy --hp /home/deploy

pm2 monit

